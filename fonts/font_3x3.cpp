//  SPDX-License-Identifier: CC0-1.0
//
//  Autogenerated by plan44 FontHexer2 pixel font generator
//

//  Include this file into a p44lrgraphics build to define a built-in font

#include "fonts.hpp"

using namespace p44;

#ifdef GENERATE_FONT_SOURCE

// Font author's copyright
static const char * font_3x3_copyright =
  "License: CC0-1.0\n"
  "This font is licensed under the Creative Commons Zero v1.0 Universal.\n"
  "You can use them freely in your products & projects - print or digital, commercial or otherwise.\n"
  "For more information about this font, go to https://www.ggbot.net/fonts\n";


// MARK: - '3x3' generated font verification data

static const char * font_3x3_glyphstrings[] = {
  "placeholder" /* 0x00 - Glyph 0 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   "XXX" , // 07

  " " /* UTF-8 20 - Glyph 1 */

  "\n"   "..."   // 00
  "\n"   "..."   // 00
  "\n"   "..." , // 00

  "!" /* UTF-8 21 - Glyph 2 */

  "\n"   "..."   // 00
  "\n"   "XXX" , // 07

  "\"" /* UTF-8 22 - Glyph 3 */

  "\n"   "..X"   // 01
  "\n"   "..."   // 00
  "\n"   "..X" , // 01

  "#" /* UTF-8 23 - Glyph 4 */

  "\n"   "X.."   // 04
  "\n"   "XX." , // 06

  "$" /* UTF-8 24 - Glyph 5 */

  "\n"   ".X."   // 02
  "\n"   "..X" , // 01

  "%" /* UTF-8 25 - Glyph 6 */

  "\n"   "..X"   // 01
  "\n"   ".X." , // 02

  "&" /* UTF-8 26 - Glyph 7 */

  "\n"   "XXX" , // 07

  "'" /* UTF-8 27 - Glyph 8 */

  "\n"   "..."   // 00
  "\n"   "..X" , // 01

  "(" /* UTF-8 28 - Glyph 9 */

  "\n"   ".X."   // 02
  "\n"   "X.X" , // 05

  ")" /* UTF-8 29 - Glyph 10 */

  "\n"   "..."   // 00
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "*" /* UTF-8 2A - Glyph 11 */

  "\n"   "..X" , // 01

  "+" /* UTF-8 2B - Glyph 12 */

  "\n"   ".X."   // 02
  "\n"   "XXX"   // 07
  "\n"   ".X." , // 02

  "," /* UTF-8 2C - Glyph 13 */

  "\n"   "X.."   // 04
  "\n"   ".X." , // 02

  "-" /* UTF-8 2D - Glyph 14 */

  "\n"   ".X."   // 02
  "\n"   ".X."   // 02
  "\n"   ".X." , // 02

  "." /* UTF-8 2E - Glyph 15 */

  "\n"   "..."   // 00
  "\n"   "X.." , // 04

  "/" /* UTF-8 2F - Glyph 16 */

  "\n"   "X.."   // 04
  "\n"   ".X."   // 02
  "\n"   "..X" , // 01

  "0" /* UTF-8 30 - Glyph 17 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   "XXX" , // 07

  "1" /* UTF-8 31 - Glyph 18 */

  "\n"   "..X"   // 01
  "\n"   "XXX" , // 07

  "2" /* UTF-8 32 - Glyph 19 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   "X.." , // 04

  "3" /* UTF-8 33 - Glyph 20 */

  "\n"   "..X"   // 01
  "\n"   ".XX"   // 03
  "\n"   "XX." , // 06

  "4" /* UTF-8 34 - Glyph 21 */

  "\n"   ".XX"   // 03
  "\n"   ".X."   // 02
  "\n"   "XXX" , // 07

  "5" /* UTF-8 35 - Glyph 22 */

  "\n"   "X.."   // 04
  "\n"   "XXX"   // 07
  "\n"   "..X" , // 01

  "6" /* UTF-8 36 - Glyph 23 */

  "\n"   "XXX"   // 07
  "\n"   "XX."   // 06
  "\n"   "XX." , // 06

  "7" /* UTF-8 37 - Glyph 24 */

  "\n"   "..X"   // 01
  "\n"   "..X"   // 01
  "\n"   "XXX" , // 07

  "8" /* UTF-8 38 - Glyph 25 */

  "\n"   "XX."   // 06
  "\n"   "XXX"   // 07
  "\n"   "XX." , // 06

  "9" /* UTF-8 39 - Glyph 26 */

  "\n"   ".XX"   // 03
  "\n"   ".XX"   // 03
  "\n"   "XXX" , // 07

  ":" /* UTF-8 3A - Glyph 27 */

  "\n"   "..."   // 00
  "\n"   "X.X" , // 05

  ";" /* UTF-8 3B - Glyph 28 */

  "\n"   "X.."   // 04
  "\n"   "X.X" , // 05

  "<" /* UTF-8 3C - Glyph 29 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   "X.X" , // 05

  "=" /* UTF-8 3D - Glyph 30 */

  "\n"   "X.X"   // 05
  "\n"   "X.X"   // 05
  "\n"   "X.X" , // 05

  ">" /* UTF-8 3E - Glyph 31 */

  "\n"   "X.X"   // 05
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "?" /* UTF-8 3F - Glyph 32 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   ".XX" , // 03

  "@" /* UTF-8 40 - Glyph 33 */

  "\n"   "..."   // 00
  "\n"   "X.X" , // 05

  "A" /* UTF-8 41 - Glyph 34 */

  "\n"   "XX."   // 06
  "\n"   "..X"   // 01
  "\n"   "XX." , // 06

  "B" /* UTF-8 42 - Glyph 35 */

  "\n"   "XXX"   // 07
  "\n"   "XXX"   // 07
  "\n"   ".X." , // 02

  "C" /* UTF-8 43 - Glyph 36 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   "X.X" , // 05

  "D" /* UTF-8 44 - Glyph 37 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "E" /* UTF-8 45 - Glyph 38 */

  "\n"   "XXX"   // 07
  "\n"   "XX."   // 06
  "\n"   "X.." , // 04

  "F" /* UTF-8 46 - Glyph 39 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "..X" , // 01

  "G" /* UTF-8 47 - Glyph 40 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   "XX." , // 06

  "H" /* UTF-8 48 - Glyph 41 */

  "\n"   "XXX"   // 07
  "\n"   ".X."   // 02
  "\n"   "XXX" , // 07

  "I" /* UTF-8 49 - Glyph 42 */

  "\n"   "X.X"   // 05
  "\n"   "XXX"   // 07
  "\n"   "X.X" , // 05

  "J" /* UTF-8 4A - Glyph 43 */

  "\n"   "XX."   // 06
  "\n"   "X.."   // 04
  "\n"   "XXX" , // 07

  "K" /* UTF-8 4B - Glyph 44 */

  "\n"   "XXX"   // 07
  "\n"   ".X."   // 02
  "\n"   "X.X" , // 05

  "L" /* UTF-8 4C - Glyph 45 */

  "\n"   "XXX"   // 07
  "\n"   "X.."   // 04
  "\n"   "X.." , // 04

  "M" /* UTF-8 4D - Glyph 46 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "XXX" , // 07

  "N" /* UTF-8 4E - Glyph 47 */

  "\n"   "XXX"   // 07
  "\n"   "..X"   // 01
  "\n"   "XX." , // 06

  "O" /* UTF-8 4F - Glyph 48 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "P" /* UTF-8 50 - Glyph 49 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   ".XX" , // 03

  "Q" /* UTF-8 51 - Glyph 50 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   "XX." , // 06

  "R" /* UTF-8 52 - Glyph 51 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "X.." , // 04

  "S" /* UTF-8 53 - Glyph 52 */

  "\n"   "X.."   // 04
  "\n"   "XXX"   // 07
  "\n"   "..X" , // 01

  "T" /* UTF-8 54 - Glyph 53 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   "..X" , // 01

  "U" /* UTF-8 55 - Glyph 54 */

  "\n"   "XXX"   // 07
  "\n"   "X.."   // 04
  "\n"   "XXX" , // 07

  "V" /* UTF-8 56 - Glyph 55 */

  "\n"   ".XX"   // 03
  "\n"   "X.."   // 04
  "\n"   ".XX" , // 03

  "W" /* UTF-8 57 - Glyph 56 */

  "\n"   "XXX"   // 07
  "\n"   "XX."   // 06
  "\n"   "XXX" , // 07

  "X" /* UTF-8 58 - Glyph 57 */

  "\n"   "X.X"   // 05
  "\n"   ".X."   // 02
  "\n"   "X.X" , // 05

  "Y" /* UTF-8 59 - Glyph 58 */

  "\n"   ".XX"   // 03
  "\n"   "XX."   // 06
  "\n"   ".XX" , // 03

  "Z" /* UTF-8 5A - Glyph 59 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   "X.." , // 04

  "[" /* UTF-8 5B - Glyph 60 */

  "\n"   "XXX"   // 07
  "\n"   "X.X" , // 05

  "\\" /* UTF-8 5C - Glyph 61 */

  "\n"   "..X"   // 01
  "\n"   ".X."   // 02
  "\n"   "X.." , // 04

  "]" /* UTF-8 5D - Glyph 62 */

  "\n"   "..."   // 00
  "\n"   "X.X"   // 05
  "\n"   "XXX" , // 07

  "^" /* UTF-8 5E - Glyph 63 */

  "\n"   ".X."   // 02
  "\n"   "..X"   // 01
  "\n"   ".X." , // 02

  "_" /* UTF-8 5F - Glyph 64 */

  "\n"   "X.."   // 04
  "\n"   "X.."   // 04
  "\n"   "X.." , // 04

  "`" /* UTF-8 60 - Glyph 65 */

  "\n"   "..."   // 00
  "\n"   "..X" , // 01

  "a" /* UTF-8 61 - Glyph 66 */

  "\n"   "XX."   // 06
  "\n"   "..X"   // 01
  "\n"   "XX." , // 06

  "b" /* UTF-8 62 - Glyph 67 */

  "\n"   "XXX"   // 07
  "\n"   "XXX"   // 07
  "\n"   ".X." , // 02

  "c" /* UTF-8 63 - Glyph 68 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   "X.X" , // 05

  "d" /* UTF-8 64 - Glyph 69 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "e" /* UTF-8 65 - Glyph 70 */

  "\n"   "XXX"   // 07
  "\n"   "XX."   // 06
  "\n"   "X.." , // 04

  "f" /* UTF-8 66 - Glyph 71 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "..X" , // 01

  "g" /* UTF-8 67 - Glyph 72 */

  "\n"   "XXX"   // 07
  "\n"   "X.X"   // 05
  "\n"   "XX." , // 06

  "h" /* UTF-8 68 - Glyph 73 */

  "\n"   "XXX"   // 07
  "\n"   ".X."   // 02
  "\n"   "XXX" , // 07

  "i" /* UTF-8 69 - Glyph 74 */

  "\n"   "X.X"   // 05
  "\n"   "XXX"   // 07
  "\n"   "X.X" , // 05

  "j" /* UTF-8 6A - Glyph 75 */

  "\n"   "XX."   // 06
  "\n"   "X.."   // 04
  "\n"   "XXX" , // 07

  "k" /* UTF-8 6B - Glyph 76 */

  "\n"   "XXX"   // 07
  "\n"   ".X."   // 02
  "\n"   "X.X" , // 05

  "l" /* UTF-8 6C - Glyph 77 */

  "\n"   "XXX"   // 07
  "\n"   "X.."   // 04
  "\n"   "X.." , // 04

  "m" /* UTF-8 6D - Glyph 78 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "XXX" , // 07

  "n" /* UTF-8 6E - Glyph 79 */

  "\n"   "XXX"   // 07
  "\n"   "..X"   // 01
  "\n"   "XX." , // 06

  "o" /* UTF-8 6F - Glyph 80 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   ".X." , // 02

  "p" /* UTF-8 70 - Glyph 81 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   ".XX" , // 03

  "q" /* UTF-8 71 - Glyph 82 */

  "\n"   ".X."   // 02
  "\n"   "X.X"   // 05
  "\n"   "XX." , // 06

  "r" /* UTF-8 72 - Glyph 83 */

  "\n"   "XXX"   // 07
  "\n"   ".XX"   // 03
  "\n"   "X.." , // 04

  "s" /* UTF-8 73 - Glyph 84 */

  "\n"   "X.."   // 04
  "\n"   "XXX"   // 07
  "\n"   "..X" , // 01

  "t" /* UTF-8 74 - Glyph 85 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   "..X" , // 01

  "u" /* UTF-8 75 - Glyph 86 */

  "\n"   "XXX"   // 07
  "\n"   "X.."   // 04
  "\n"   "XXX" , // 07

  "v" /* UTF-8 76 - Glyph 87 */

  "\n"   ".XX"   // 03
  "\n"   "X.."   // 04
  "\n"   ".XX" , // 03

  "w" /* UTF-8 77 - Glyph 88 */

  "\n"   "XXX"   // 07
  "\n"   "XX."   // 06
  "\n"   "XXX" , // 07

  "x" /* UTF-8 78 - Glyph 89 */

  "\n"   "X.X"   // 05
  "\n"   ".X."   // 02
  "\n"   "X.X" , // 05

  "y" /* UTF-8 79 - Glyph 90 */

  "\n"   ".XX"   // 03
  "\n"   "XX."   // 06
  "\n"   ".XX" , // 03

  "z" /* UTF-8 7A - Glyph 91 */

  "\n"   "..X"   // 01
  "\n"   "XXX"   // 07
  "\n"   "X.." , // 04

  "{" /* UTF-8 7B - Glyph 92 */

  "\n"   ".X."   // 02
  "\n"   "XXX"   // 07
  "\n"   "X.X" , // 05

  "|" /* UTF-8 7C - Glyph 93 */

  "\n"   "..."   // 00
  "\n"   "XXX" , // 07

  "}" /* UTF-8 7D - Glyph 94 */

  "\n"   "X.X"   // 05
  "\n"   "XXX"   // 07
  "\n"   ".X." , // 02

  "~" /* UTF-8 7E - Glyph 95 */

  "\n"   "..X"   // 01
  "\n"   ".XX"   // 03
  "\n"   ".X." , // 02

  nullptr // terminator
};

// MARK: - end of generated font verification data


#endif // GENERATE_FONT_SOURCE


// MARK: - '3x3' generated font data

static const glyph_t font_3x3_glyphs[] = {
  {  3, "\x07\x05\x07"                             },  // placeholder          (input # 0 -> glyph # 0)
  {  3, "\x00\x00\x00"                             },  // ' ' UTF-8 20         (input # 1 -> glyph # 1)
  {  2, "\x00\x07"                                 },  // '!' UTF-8 21         (input # 2 -> glyph # 2)
  {  3, "\x01\x00\x01"                             },  // '"' UTF-8 22         (input # 3 -> glyph # 3)
  {  2, "\x04\x06"                                 },  // '#' UTF-8 23         (input # 4 -> glyph # 4)
  {  2, "\x02\x01"                                 },  // '$' UTF-8 24         (input # 5 -> glyph # 5)
  {  2, "\x01\x02"                                 },  // '%' UTF-8 25         (input # 6 -> glyph # 6)
  {  1, "\x07"                                     },  // '&' UTF-8 26         (input # 7 -> glyph # 7)
  {  2, "\x00\x01"                                 },  // ''' UTF-8 27         (input # 8 -> glyph # 8)
  {  2, "\x02\x05"                                 },  // '(' UTF-8 28         (input # 9 -> glyph # 9)
  {  3, "\x00\x05\x02"                             },  // ')' UTF-8 29         (input # 10 -> glyph # 10)
  {  1, "\x01"                                     },  // '*' UTF-8 2A         (input # 11 -> glyph # 11)
  {  3, "\x02\x07\x02"                             },  // '+' UTF-8 2B         (input # 12 -> glyph # 12)
  {  2, "\x04\x02"                                 },  // ',' UTF-8 2C         (input # 13 -> glyph # 13)
  {  3, "\x02\x02\x02"                             },  // '-' UTF-8 2D         (input # 14 -> glyph # 14)
  {  2, "\x00\x04"                                 },  // '.' UTF-8 2E         (input # 15 -> glyph # 15)
  {  3, "\x04\x02\x01"                             },  // '/' UTF-8 2F         (input # 16 -> glyph # 16)
  {  3, "\x07\x05\x07"                             },  // '0' UTF-8 30         (input # 17 -> glyph # 17)
  {  2, "\x01\x07"                                 },  // '1' UTF-8 31         (input # 18 -> glyph # 18)
  {  3, "\x01\x07\x04"                             },  // '2' UTF-8 32         (input # 19 -> glyph # 19)
  {  3, "\x01\x03\x06"                             },  // '3' UTF-8 33         (input # 20 -> glyph # 20)
  {  3, "\x03\x02\x07"                             },  // '4' UTF-8 34         (input # 21 -> glyph # 21)
  {  3, "\x04\x07\x01"                             },  // '5' UTF-8 35         (input # 22 -> glyph # 22)
  {  3, "\x07\x06\x06"                             },  // '6' UTF-8 36         (input # 23 -> glyph # 23)
  {  3, "\x01\x01\x07"                             },  // '7' UTF-8 37         (input # 24 -> glyph # 24)
  {  3, "\x06\x07\x06"                             },  // '8' UTF-8 38         (input # 25 -> glyph # 25)
  {  3, "\x03\x03\x07"                             },  // '9' UTF-8 39         (input # 26 -> glyph # 26)
  {  2, "\x00\x05"                                 },  // ':' UTF-8 3A         (input # 27 -> glyph # 27)
  {  2, "\x04\x05"                                 },  // ';' UTF-8 3B         (input # 28 -> glyph # 28)
  {  3, "\x02\x05\x05"                             },  // '<' UTF-8 3C         (input # 29 -> glyph # 29)
  {  3, "\x05\x05\x05"                             },  // '=' UTF-8 3D         (input # 30 -> glyph # 30)
  {  3, "\x05\x05\x02"                             },  // '>' UTF-8 3E         (input # 31 -> glyph # 31)
  {  3, "\x01\x07\x03"                             },  // '?' UTF-8 3F         (input # 32 -> glyph # 32)
  {  2, "\x00\x05"                                 },  // '@' UTF-8 40         (input # 33 -> glyph # 33)
  {  3, "\x06\x01\x06"                             },  // 'A' UTF-8 41         (input # 34 -> glyph # 34)
  {  3, "\x07\x07\x02"                             },  // 'B' UTF-8 42         (input # 35 -> glyph # 35)
  {  3, "\x02\x05\x05"                             },  // 'C' UTF-8 43         (input # 36 -> glyph # 36)
  {  3, "\x07\x05\x02"                             },  // 'D' UTF-8 44         (input # 37 -> glyph # 37)
  {  3, "\x07\x06\x04"                             },  // 'E' UTF-8 45         (input # 38 -> glyph # 38)
  {  3, "\x07\x03\x01"                             },  // 'F' UTF-8 46         (input # 39 -> glyph # 39)
  {  3, "\x07\x05\x06"                             },  // 'G' UTF-8 47         (input # 40 -> glyph # 40)
  {  3, "\x07\x02\x07"                             },  // 'H' UTF-8 48         (input # 41 -> glyph # 41)
  {  3, "\x05\x07\x05"                             },  // 'I' UTF-8 49         (input # 42 -> glyph # 42)
  {  3, "\x06\x04\x07"                             },  // 'J' UTF-8 4A         (input # 43 -> glyph # 43)
  {  3, "\x07\x02\x05"                             },  // 'K' UTF-8 4B         (input # 44 -> glyph # 44)
  {  3, "\x07\x04\x04"                             },  // 'L' UTF-8 4C         (input # 45 -> glyph # 45)
  {  3, "\x07\x03\x07"                             },  // 'M' UTF-8 4D         (input # 46 -> glyph # 46)
  {  3, "\x07\x01\x06"                             },  // 'N' UTF-8 4E         (input # 47 -> glyph # 47)
  {  3, "\x02\x05\x02"                             },  // 'O' UTF-8 4F         (input # 48 -> glyph # 48)
  {  3, "\x07\x03\x03"                             },  // 'P' UTF-8 50         (input # 49 -> glyph # 49)
  {  3, "\x02\x05\x06"                             },  // 'Q' UTF-8 51         (input # 50 -> glyph # 50)
  {  3, "\x07\x03\x04"                             },  // 'R' UTF-8 52         (input # 51 -> glyph # 51)
  {  3, "\x04\x07\x01"                             },  // 'S' UTF-8 53         (input # 52 -> glyph # 52)
  {  3, "\x01\x07\x01"                             },  // 'T' UTF-8 54         (input # 53 -> glyph # 53)
  {  3, "\x07\x04\x07"                             },  // 'U' UTF-8 55         (input # 54 -> glyph # 54)
  {  3, "\x03\x04\x03"                             },  // 'V' UTF-8 56         (input # 55 -> glyph # 55)
  {  3, "\x07\x06\x07"                             },  // 'W' UTF-8 57         (input # 56 -> glyph # 56)
  {  3, "\x05\x02\x05"                             },  // 'X' UTF-8 58         (input # 57 -> glyph # 57)
  {  3, "\x03\x06\x03"                             },  // 'Y' UTF-8 59         (input # 58 -> glyph # 58)
  {  3, "\x01\x07\x04"                             },  // 'Z' UTF-8 5A         (input # 59 -> glyph # 59)
  {  2, "\x07\x05"                                 },  // '[' UTF-8 5B         (input # 60 -> glyph # 60)
  {  3, "\x01\x02\x04"                             },  // '\' UTF-8 5C         (input # 61 -> glyph # 61)
  {  3, "\x00\x05\x07"                             },  // ']' UTF-8 5D         (input # 62 -> glyph # 62)
  {  3, "\x02\x01\x02"                             },  // '^' UTF-8 5E         (input # 63 -> glyph # 63)
  {  3, "\x04\x04\x04"                             },  // '_' UTF-8 5F         (input # 64 -> glyph # 64)
  {  2, "\x00\x01"                                 },  // '`' UTF-8 60         (input # 65 -> glyph # 65)
  {  3, "\x06\x01\x06"                             },  // 'a' UTF-8 61         (input # 66 -> glyph # 66)
  {  3, "\x07\x07\x02"                             },  // 'b' UTF-8 62         (input # 67 -> glyph # 67)
  {  3, "\x02\x05\x05"                             },  // 'c' UTF-8 63         (input # 68 -> glyph # 68)
  {  3, "\x07\x05\x02"                             },  // 'd' UTF-8 64         (input # 69 -> glyph # 69)
  {  3, "\x07\x06\x04"                             },  // 'e' UTF-8 65         (input # 70 -> glyph # 70)
  {  3, "\x07\x03\x01"                             },  // 'f' UTF-8 66         (input # 71 -> glyph # 71)
  {  3, "\x07\x05\x06"                             },  // 'g' UTF-8 67         (input # 72 -> glyph # 72)
  {  3, "\x07\x02\x07"                             },  // 'h' UTF-8 68         (input # 73 -> glyph # 73)
  {  3, "\x05\x07\x05"                             },  // 'i' UTF-8 69         (input # 74 -> glyph # 74)
  {  3, "\x06\x04\x07"                             },  // 'j' UTF-8 6A         (input # 75 -> glyph # 75)
  {  3, "\x07\x02\x05"                             },  // 'k' UTF-8 6B         (input # 76 -> glyph # 76)
  {  3, "\x07\x04\x04"                             },  // 'l' UTF-8 6C         (input # 77 -> glyph # 77)
  {  3, "\x07\x03\x07"                             },  // 'm' UTF-8 6D         (input # 78 -> glyph # 78)
  {  3, "\x07\x01\x06"                             },  // 'n' UTF-8 6E         (input # 79 -> glyph # 79)
  {  3, "\x02\x05\x02"                             },  // 'o' UTF-8 6F         (input # 80 -> glyph # 80)
  {  3, "\x07\x03\x03"                             },  // 'p' UTF-8 70         (input # 81 -> glyph # 81)
  {  3, "\x02\x05\x06"                             },  // 'q' UTF-8 71         (input # 82 -> glyph # 82)
  {  3, "\x07\x03\x04"                             },  // 'r' UTF-8 72         (input # 83 -> glyph # 83)
  {  3, "\x04\x07\x01"                             },  // 's' UTF-8 73         (input # 84 -> glyph # 84)
  {  3, "\x01\x07\x01"                             },  // 't' UTF-8 74         (input # 85 -> glyph # 85)
  {  3, "\x07\x04\x07"                             },  // 'u' UTF-8 75         (input # 86 -> glyph # 86)
  {  3, "\x03\x04\x03"                             },  // 'v' UTF-8 76         (input # 87 -> glyph # 87)
  {  3, "\x07\x06\x07"                             },  // 'w' UTF-8 77         (input # 88 -> glyph # 88)
  {  3, "\x05\x02\x05"                             },  // 'x' UTF-8 78         (input # 89 -> glyph # 89)
  {  3, "\x03\x06\x03"                             },  // 'y' UTF-8 79         (input # 90 -> glyph # 90)
  {  3, "\x01\x07\x04"                             },  // 'z' UTF-8 7A         (input # 91 -> glyph # 91)
  {  3, "\x02\x07\x05"                             },  // '{' UTF-8 7B         (input # 92 -> glyph # 92)
  {  2, "\x00\x07"                                 },  // '|' UTF-8 7C         (input # 93 -> glyph # 93)
  {  3, "\x05\x07\x02"                             },  // '}' UTF-8 7D         (input # 94 -> glyph # 94)
  {  3, "\x01\x03\x02"                             },  // '~' UTF-8 7E         (input # 95 -> glyph # 95)
};

static const GlyphRange font_3x3_ranges[] = {
  { "", 0x20, 0x7E, 1 }, //  !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
  { NULL, 0, 0, 0 }
};

static const font_t font_3x3 = {
  .fontName = "3x3",
  .glyphHeight = 3,
  .numGlyphs = 96,
  .glyphRanges = font_3x3_ranges,
  .glyphs = font_3x3_glyphs,
   #ifdef GENERATE_FONT_SOURCE
   .copyright = font_3x3_copyright,
   .glyphstrings = font_3x3_glyphstrings
   #else
   .copyright = nullptr
   #endif
};

static BuiltinFontRegistrar r(font_3x3);

// MARK: - end of generated font data

